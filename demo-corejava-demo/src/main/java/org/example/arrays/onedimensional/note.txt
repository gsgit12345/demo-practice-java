The recommended solution to target this problem is using the priority queue. The idea is to keep track of the top k largest elements using a
min-heap of size k. The advantage of using the min-heap is that the k'th largest element is always present at the root and can be retrieved in constant time.
The idea is to compare each incoming element n in the stream with the root element of min-heap r. If n is more than r, replace r with n and call
the Heapify procedure on the modified heapâ€™s root. If n is less than r, ignore it.
The time complexity of processing a new element in the stream using this approach is O(log(k)), while the time taken for finding the k'th largest
element improves to O(1). The additional space used by the program is O(k).


 top 50 interview question

https://www.geeksforgeeks.org/top-50-array-coding-problems-for-interviews/


Given N balls of colour red, white or blue arranged in a line in random order. You have to arrange all the balls such that the balls with the
same colours are adjacent with the order of the balls, with the order of the colours being red, white and blue (i.e., all red coloured balls come first
 then the white coloured balls and then the blue coloured balls).
solution
//DutchNationalFlagProbandThreewayPartion.java


https://www.w3resource.com/java-exercises/array/index.php  java subjective excersize

   1-     //Find first non-repeating element in a given Array of integers
       // https://www.geeksforgeeks.org/non-repeating-element/

   2-

   //https://practice.geeksforgeeks.org/explore?page=9&sortBy=submissions  --problem on merge sort

   https://www.youtube.com/watch?v=e-sbCk5FOF8&list=PLLT4EuYB4kIb0G4k2LxdIs2dCaj9vebqC   --problem solving